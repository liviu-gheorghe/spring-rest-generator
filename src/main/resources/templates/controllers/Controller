package {packageName}.controllers;

import {packageName}.adapters.{modelNamePluralCapitalized}Adapter;
import {packageName}.errors.NotFoundError;
import {packageName}.models.{modelNameCapitalized};
import {packageName}.services.{modelNameCapitalized}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import javax.validation.Valid;
import java.util.List;

@RestController
@RequestMapping("api/v1/{modelNamePlural}")
public class {modelNamePluralCapitalized}Controller implements IRestController<{modelNameCapitalized}> {

    @Autowired
    {modelNameCapitalized}Service {modelName}Service;

    @GetMapping
    @Override
    public ResponseEntity<{modelNamePluralCapitalized}Adapter> getAll() {
        {modelNamePluralCapitalized}Adapter {modelNamePlural}Adapter = new {modelNamePluralCapitalized}Adapter({modelName}Service.getAll());
        return ResponseEntity.ok({modelNamePlural}Adapter);
    }

    @GetMapping("/{id}")
    public ResponseEntity<{modelNamePluralCapitalized}Adapter> getById(@PathVariable("id") Integer id) {
        {modelNamePluralCapitalized}Adapter {modelNamePlural}Adapter = new {modelNamePluralCapitalized}Adapter({modelName}Service.getById(id));
        if({modelNamePlural}Adapter.get{modelNamePluralCapitalized}() == null || {modelNamePlural}Adapter.get{modelNamePluralCapitalized}().size() != 1) {
            throw new NotFoundError();
        }
        return ResponseEntity.ok({modelNamePlural}Adapter);
    }

    @PostMapping
    @Override
    @ResponseStatus(HttpStatus.CREATED)
    public ResponseEntity<{modelNamePluralCapitalized}Adapter> add(@Valid @RequestBody {modelNameCapitalized} {modelName}) {
        return ResponseEntity.ok(new {modelNamePluralCapitalized}Adapter({modelName}Service.add({modelName})));
    }

    @PutMapping("/{id}")
    @Override
    public ResponseEntity<{modelNamePluralCapitalized}Adapter> update(@Valid @RequestBody {modelNameCapitalized} {modelName}) {
        return ResponseEntity.ok(new {modelNamePluralCapitalized}Adapter({modelName}Service.update({modelName})));
    }

    @DeleteMapping("/{id}")
    @Override
    public ResponseEntity<{modelNamePluralCapitalized}Adapter> delete(@PathVariable("id") Integer id) {
        return ResponseEntity.ok(new {modelNamePluralCapitalized}Adapter({modelName}Service.delete(id)));
    }
}